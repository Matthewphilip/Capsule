{"mappings":"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","sources":["src/js/form.js"],"sourcesContent":["// object variable data store\nconst form = {\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n};\n// target elemtns in html\nconst modalOverlay = document.getElementById(\"modalOverlay\");\nconst modal = document.getElementById(\"modal\");\nconst closeModal = document.getElementById(\"closeModal\");\nconst downloadButton = document.querySelector(\".lander-button\");\nconst firstNameInput = document.getElementById(\"first_name\");\nconst lastNameInput = document.getElementById(\"last_name\");\nconst emailInput = document.getElementById(\"email\");\nconst firstNameError = document.getElementById(\"first_name_error\");\nconst lastNameError = document.getElementById(\"last_name_error\");\nconst emailError = document.getElementById(\"email_error\");\nconst downloadForm = document.getElementById(\"downloadForm\");\nconst modalButton = document.querySelector(\".modal-button\");\nconst confirmationText = document.querySelector(\".confirmation-text\");\n\n// open modal on button click\ndownloadButton.addEventListener(\"click\", function () {\n  // return user to top of screen for modal on mobile if the window width is <= 768px\n  if (window.innerWidth <= 768) {\n    window.scrollTo(0, 0);\n  }\n  modalOverlay.style.display = \"flex\";\n});\n\n// close button on 'x' click\ncloseModal.addEventListener(\"click\", function () {\n  modalOverlay.style.display = \"none\";\n});\n\n// close modal if user clicks outside of the modal\nmodalOverlay.addEventListener(\"click\", function (e) {\n  if (e.target === modalOverlay) {\n    modalOverlay.style.display = \"none\";\n  }\n});\n\n// first-name input error: if user has an error but then starts typing error classes are removed\nfirstNameInput.addEventListener(\"input\", function () {\n  if (this.value.trim() !== \"\") {\n    firstNameError.style.display = \"none\";\n    this.classList.remove(\"error\");\n    this.placeholder = \"First Name\";\n  }\n\n  // if the first name input has more than 3 characters disable it\n  if (this.value.length > 3) {\n    this.disabled = true;\n  } else {\n    this.disabled = false;\n  }\n});\n\n// last-name input error: if user has an error but then starts typing error classes are removed\nlastNameInput.addEventListener(\"input\", function () {\n  if (this.value.trim() !== \"\") {\n    lastNameError.style.display = \"none\";\n    this.classList.remove(\"error\");\n    this.placeholder = \"Last Name\";\n  }\n});\n\n// email input error: if user has an error but then starts typing error classes are removed\nemailInput.addEventListener(\"input\", function () {\n  if (this.value.trim() !== \"\") {\n    emailError.style.display = \"none\";\n    this.classList.remove(\"error\");\n    this.placeholder = \"Email\";\n  }\n});\n\ndownloadForm.addEventListener(\"submit\", function (e) {\n  e.preventDefault();\n\n  // prior to form submission enable to disabled value, otherwise form won't submit\n  firstNameInput.disabled = false;\n\n  // get form data for entered values\n  const formData = new FormData(downloadForm);\n\n  // update the form object with entered form data\n  form.first_name = formData.get(\"first_name\");\n  form.last_name = formData.get(\"last_name\");\n  form.email = formData.get(\"email\");\n\n  console.log(\"pre submit First Name:\", form.first_name);\n  console.log(\"pre submit Last Name:\", form.last_name);\n  console.log(\"pre submit Email:\", form.email);\n\n  // check if first name's empty\n  if (form.first_name.trim() === \"\") {\n    firstNameError.textContent = \"First name is required.\";\n    firstNameError.style.display = \"flex\";\n\n    firstNameInput.classList.add(\"error\");\n    firstNameInput.placeholder = \"Error\";\n  } else {\n    firstNameInput.classList.remove(\"error\");\n    firstNameInput.placeholder = \"First Name\";\n  }\n\n  // check if last name's empty\n  if (form.last_name.trim() === \"\") {\n    lastNameError.textContent = \"Last name is required.\";\n    lastNameError.style.display = \"flex\";\n\n    lastNameInput.classList.add(\"error\");\n    lastNameInput.placeholder = \"Error\";\n  } else {\n    lastNameInput.classList.remove(\"error\");\n    lastNameInput.placeholder = \"Last Name\";\n  }\n\n  // check if email's empty and it doesn't include '@'\n  if (form.email.trim() === \"\" || !form.email.includes(\"@\")) {\n    emailError.textContent = \"Email is required.\";\n    emailError.style.display = \"flex\";\n\n    emailInput.classList.add(\"error\");\n    emailInput.placeholder = \"Error\";\n  } else {\n    emailInput.classList.remove(\"error\");\n    emailInput.placeholder = \"Email\";\n  }\n\n  console.log(\"first validations\");\n\n  // check if values aren't empty\n  if (\n    form.first_name.trim() !== \"\" &&\n    form.last_name.trim() !== \"\" &&\n    form.email.trim() !== \"\"\n  ) {\n    console.log(\"pre-submit validations - pass\");\n\n    // handle form submission, e.g., send data to endpoint\n    console.log(\"submitted First Name:\", form.first_name);\n    console.log(\"submitted Last Name:\", form.last_name);\n    console.log(\"submitted Email:\", form.email);\n\n    // create an object to send the data\n    const postData = {\n      first_name: form.first_name,\n      last_name: form.last_name,\n      email: form.email,\n    };\n\n    // send post request to endpoint with form data\n    // fetch(\"url\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\", // Set the content type to JSON\n    //     },\n    //     body: JSON.stringify(postData), // Convert the data to JSON format\n    //   })\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       // Handle the response from the server if needed\n    //       console.log(\"Server response:\", data);\n\n    //       setTimeout(function () {\n    //         // Reset the visuals & close modal\n    //         modalOverlay.style.display = \"none\";\n    //         modalButton.style.backgroundColor = \"#444BF7\";\n    //         modalButton.textContent = \"Submit\";\n    //         confirmationText.style.display = \"none\";\n\n    //         // Reset the form data\n    //         form.first_name = \"\";\n    //         form.last_name = \"\";\n    //         form.email = \"\";\n    //       }, 3000);\n    //     })\n    //     .catch((error) => {\n    //       console.error(\"Error:\", error);\n    //     });\n\n    //set success status of submit button\n    modalButton.style.backgroundColor = \"#07b547\";\n    modalButton.textContent = \"Sent\";\n    confirmationText.style.display = \"flex\";\n\n    console.log(\"SUBMITTED\");\n\n    // functionality pulled out of post req for now as we aren't sending it\n    setTimeout(function () {\n      // reset the form data\n      form.first_name = \"\";\n      form.last_name = \"\";\n      form.email = \"\";\n\n      // reset input fields in html\n      document.getElementById(\"first_name\").value = \"\";\n      document.getElementById(\"last_name\").value = \"\";\n      document.getElementById(\"email\").value = \"\";\n\n      // reset the visuals & close modal\n      modalOverlay.style.display = \"none\";\n      modalButton.style.backgroundColor = \"#444BF7\";\n      modalButton.textContent = \"Submit\";\n      confirmationText.style.display = \"none\";\n    }, 3000);\n  }\n});\n"],"names":[],"version":3,"file":"index.f85ccfd0.js.map","sourceRoot":"/__parcel_source_root/"}